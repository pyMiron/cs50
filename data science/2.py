import numpy as np
object_dem = [2, 3, 4]
# приводит вхоные данные object  к матрице ,если это возможно. Параметр object может быть строкой, списком, кортежем
np.mat(object_dem)
# формирует диагональную матрицу на основе списка или массива numpy ,возвращает копию  массива а не его представление
np.diag(object_dem)
# формирует диагональную матрицу из списка, который сначала сжимает до одной оси (преобразует в одномерный список или массив)
np.diagflat(object_dem)
# создает треугольный массив с единицами на главной диагонали и ниже ее
np.tri(4, 5)
# преобразует двумерный список или массив в треугольную матрицу с нулевыми элементами выше главной диагонали
np.tril(object_dem)
# преобразует двумерный список или массив в треугольную матрицу с нулевыми элементами ниже главной диагонали
np.triu(object_dem)
# создание матрицы Вандермонда из одномерного списка или массива. Второй параметр определяет число столбцов(по умолчанию квадратная матрица)
np.vander(object_dem, N=None)
# выделение элементов стоящих по главной диагонали для неодномерных списков
np.diag([(1, 2, 3), (4, 5, 6), (7, 8, 9)])

